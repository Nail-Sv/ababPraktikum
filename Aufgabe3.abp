REPORT Z_WEST13_HELLOWORLD.

*Zeichenkette einlesen
PARAMETERS: ausKette TYPE string,
            zuMask TYPE c.


DATA: ergebnis LIKE ausKette,
      lengthKette TYPE i,
      haelfte1 TYPE string,
      haelfte2 TYPE string.

*wie lang ist unsere Zeichenkette
lengthKette = STRLEN( ausKette ).

*Die Anzahl der Wiederholungen in einer Schleife hängt davon ab,
*wie viele Zeichen sich in der Zeile befinden,
*wird ausKette auf zwei Tele ausgeteilt, erste Teil enhält sich
*alles was vor dem Mask Symbol ist, zweite Teil enthält sich alles,
*was nach dem Mask Symbol ist, solcherweise wird das Mask symbol
*aus der Kette quasi gelöscht und mit CONCATENATE auf "*" ersetzt.
DO lengthKette TIMES.

  IF ausKette CA zuMask.
    SPLIT ausKette AT zuMask INTO haelfte1 haelfte2.
    CONCATENATE haelfte1 '*' haelfte2 INTO ergebnis.
    ausKette = ergebnis.
  ELSEIF ausKette NA zuMask.
    ergebnis = ausKette.
  ENDIF.

ENDDO.

WRITE / ergebnis.





REPORT Z_WEST13_HELLOWORLD.

*REPORT Z_WEST13_AUFGABE3.
*Parameters eingegeben
PARAMETERS : ausKette TYPE string,
             zuMask TYPE string.

*Ergebniss Definieren
DATA : ergebnis LIKE ausKette,
       maske TYPE c Value '*'.

*es wurde verarbeitungsfunktion aus der Uebung 3, Seite 21 verwendet
ergebnis = replace( val = ausKette sub = zuMask with = maske case = abap_true occ = 0 ).

*Ergebniss Ausgabe
WRITE: ergebnis.

QWEERT123
er -> QWE*T123
e -> QW**RT123
e1 -> QWEERT123




REPORT Z_WEST13_HELLOWORLD.

*REPORT Z_WEST13_AUFGABE3.
*Zeichenkette einlesen
PARAMETERS : ausKette TYPE string,
             zuMask TYPE string.

*Ergebniss Definieren
DATA : ergebnis LIKE ausKette,
       maske TYPE c Value '*'.

ergebnis = translate( val = ausKette from = zuMask to = maske ).

*Ergebniss Ausgabe
WRITE: ergebnis.

QWEERT123
er -> QW**T123
e -> QW**RT123
e1 -> QW**
rt -> QWEE*123
